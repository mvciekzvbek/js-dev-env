{"version":3,"sources":["webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./src/vendor.js"],"names":["__webpack_require__","d","__webpack_exports__","fetch","support","searchParams","self","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","prototype","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","this","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","isDataView","_bodyArrayBuffer","get","type","rejected","Error","then","text","readAsText","readBlobAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","DOMException","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","line","parts","key","parseHeaders","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill"],"mappings":"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","file":"vendor.1dfa89082ab21b813c2f.js","sourcesContent":["var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n","/* This file contains references to the vendor libraries\n we're using in this project. This is used by webpack\n in the production build only*. A separate bundle for vendor\n code is useful since it's unlikely to change as often\n as the application's code. So all the libraries we reference\n here will be written to vendor.js so they can be\n cached until one of them change. So basically, this avoids\n customers having to download a huge JS file anytime a line\n of code changes. They only have to download vendor.js when\n a vendor library changes which should be less frequent.\n Any files that aren't referenced here will be bundled into\n main.js for the production build.\n */\n\n/* eslint-disable no-unused-vars */\n\nimport fetch from 'whatwg-fetch';\n"],"sourceRoot":""}